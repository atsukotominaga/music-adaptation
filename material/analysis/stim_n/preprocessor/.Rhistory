ioi <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), by = .(SubNr)]
print(ioi)
p_ioi <- ggplot(data = ioi, aes(x = SubNr, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD),
width = .2, position = position_dodge(.9)) +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
labs(y = "Normalised IOI", subtitle = "IOI: Non-Expression")
p_ioi
# Group mean
ioi_all <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI))]
print(ioi_all)
# For each individual
ioi_seq <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), .(SubNr, Interval)]
p_ioi_seq <- ggplot(data = ioi_seq, aes(x = Interval, y = Mean, colour = SubNr)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width=.2,
position = position_dodge(.05)) +
labs(x = "Interval", y = "Normalised IOI") + scale_x_continuous(breaks=seq(1,66,1))
p_ioi_seq
excluded_ioi <- ioi[Mean < mean(ioi$Mean)+3*mean(ioi$SD) & Mean > mean(ioi$Mean)-3*mean(ioi$SD)]
print(excluded_ioi)
# export df_ioi
write.csv(df_ioi, file = "./filtered/data_ioi.csv", row.names = F)
getwd()
# export df_ioi
write.csv(df_ioi, file = "./filtered/data_ioi.csv", row.names = F)
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
# ggplots
theme_set(theme_classic())
theme_update(text = element_text(size = 20, family = "Helvetica Neue LT Std 57 Condensed"), legend.position = "bottom")
df_ioi <- fread("./../preprocessor/filtered/data_onset.csv", header = T, sep = ",", dec = ".") # read a filtered csv
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
# ggplots
theme_set(theme_classic())
theme_update(text = element_text(size = 20, family = "Helvetica Neue LT Std 57 Condensed"), legend.position = "bottom")
df_ioi <- fread("./../preprocessor/filtered/data_onset.csv", header = T, sep = ",", dec = ".") # read a filtered csv
# SubNr as a factor
df_ioi$SubNr <- as.factor(df_ioi$SubNr)
# assign RowNr
df_ioi$RowNr <- rep(1:72, nrow(df_ioi)/72)
# calculate normIOIs
df_ioi$IOI <- diff(c(0, df_ioi$TimeStamp))
# convert bpm to ms
df_ioi[Tempo == 120]$Tempo <- 250
df_ioi[Tempo == 110]$Tempo <- 273
df_ioi[Tempo == 100]$Tempo <- 300
# normalise IOIs
df_ioi$normIOI <- df_ioi$IOI/df_ioi$Tempo
# remove the first note
df_ioi <- df_ioi[RowNr != 1]
# assign Interval
df_ioi$Interval <- rep(1:71, nrow(df_ioi)/71)
# remove irrelevant intervals
ls_irrelevant <- list(c(25:28), c(32:35), c(51:52), c(56:57), c(65:71))
df_ioi$EighthNote <- "Yes"
for (phrase in 1:length(ls_irrelevant)){
for (note in 1:length(ls_irrelevant[[phrase]])){
df_ioi[Interval == ls_irrelevant[[phrase]][note]]$EighthNote <- "No"
}
}
# For each individual
ioi <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), by = .(SubNr)]
print(ioi)
p_ioi <- ggplot(data = ioi, aes(x = SubNr, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD),
width = .2, position = position_dodge(.9)) +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
labs(y = "Normalised IOI", subtitle = "IOI: Non-Expression")
p_ioi
# Group mean
ioi_all <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI))]
print(ioi_all)
# For each individual
ioi_seq <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), .(SubNr, Interval)]
p_ioi_seq <- ggplot(data = ioi_seq, aes(x = Interval, y = Mean, colour = SubNr)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width=.2,
position = position_dodge(.05)) +
labs(x = "Interval", y = "Normalised IOI") + scale_x_continuous(breaks=seq(1,66,1))
p_ioi_seq
excluded_ioi <- ioi[Mean < mean(ioi$Mean)+3*mean(ioi$SD) & Mean > mean(ioi$Mean)-3*mean(ioi$SD)]
print(excluded_ioi)
# export df_ioi
write.csv(df_ioi, file = "./filtered/data_ioi.csv", row.names = F)
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
# ggplots
theme_set(theme_classic())
theme_update(text = element_text(size = 20, family = "Helvetica Neue LT Std 57 Condensed"), legend.position = "bottom")
df_ioi <- fread("./../preprocessor/filtered/data_onset.csv", header = T, sep = ",", dec = ".") # read a filtered csv
# SubNr as a factor
df_ioi$SubNr <- as.factor(df_ioi$SubNr)
# assign RowNr
df_ioi$RowNr <- rep(1:72, nrow(df_ioi)/72)
# calculate normIOIs
df_ioi$IOI <- diff(c(0, df_ioi$TimeStamp))
# convert bpm to ms
df_ioi[Tempo == 120]$Tempo <- 250
df_ioi[Tempo == 110]$Tempo <- 273
df_ioi[Tempo == 100]$Tempo <- 300
# normalise IOIs
df_ioi$normIOI <- df_ioi$IOI/df_ioi$Tempo
# remove the first note
df_ioi <- df_ioi[RowNr != 1]
# assign Interval
df_ioi$Interval <- rep(1:71, nrow(df_ioi)/71)
# remove irrelevant intervals
ls_irrelevant <- list(c(25:28), c(32:35), c(51:52), c(56:57), c(65:71))
df_ioi$EighthNote <- "Yes"
for (phrase in 1:length(ls_irrelevant)){
for (note in 1:length(ls_irrelevant[[phrase]])){
df_ioi[Interval == ls_irrelevant[[phrase]][note]]$EighthNote <- "No"
}
}
# For each individual
ioi <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), by = .(SubNr)]
print(ioi)
p_ioi <- ggplot(data = ioi, aes(x = SubNr, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD),
width = .2, position = position_dodge(.9)) +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
labs(y = "Normalised IOI", subtitle = "IOI: Non-Expression")
p_ioi
# Group mean
ioi_all <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI))]
print(ioi_all)
# For each individual
ioi_seq <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), .(SubNr, Interval)]
p_ioi_seq <- ggplot(data = ioi_seq, aes(x = Interval, y = Mean, colour = SubNr)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width=.2,
position = position_dodge(.05)) +
labs(x = "Interval", y = "Normalised IOI") + scale_x_continuous(breaks=seq(1,66,1))
p_ioi_seq
excluded_ioi <- ioi[Mean < mean(ioi$Mean)+3*mean(ioi$SD) & Mean > mean(ioi$Mean)-3*mean(ioi$SD)]
print(excluded_ioi)
# export df_ioi
write.csv(df_ioi, file = "./data_ioi.csv", row.names = F)
# export df_ioi
write.csv(df_ioi, file = "./data_ioi_onset.csv", row.names = F)
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
# ggplots
theme_set(theme_classic())
theme_update(text = element_text(size = 20, family = "Helvetica Neue LT Std 57 Condensed"), legend.position = "bottom")
df_ioi <- fread("./../preprocessor/filtered/data_offset.csv", header = T, sep = ",", dec = ".") # read a filtered csv
# SubNr as a factor
df_ioi$SubNr <- as.factor(df_ioi$SubNr)
# assign RowNr
df_ioi$RowNr <- rep(1:72, nrow(df_ioi)/72)
# calculate normIOIs
df_ioi$IOI <- diff(c(0, df_ioi$TimeStamp))
# convert bpm to ms
df_ioi[Tempo == 120]$Tempo <- 250
df_ioi[Tempo == 110]$Tempo <- 273
df_ioi[Tempo == 100]$Tempo <- 300
# normalise IOIs
df_ioi$normIOI <- df_ioi$IOI/df_ioi$Tempo
# remove the first note
df_ioi <- df_ioi[RowNr != 1]
# assign Interval
df_ioi$Interval <- rep(1:71, nrow(df_ioi)/71)
# remove irrelevant intervals
ls_irrelevant <- list(c(25:28), c(32:35), c(51:52), c(56:57), c(65:71))
df_ioi$EighthNote <- "Yes"
for (phrase in 1:length(ls_irrelevant)){
for (note in 1:length(ls_irrelevant[[phrase]])){
df_ioi[Interval == ls_irrelevant[[phrase]][note]]$EighthNote <- "No"
}
}
# For each individual
ioi <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), by = .(SubNr)]
print(ioi)
p_ioi <- ggplot(data = ioi, aes(x = SubNr, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD),
width = .2, position = position_dodge(.9)) +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
labs(y = "Normalised IOI", subtitle = "IOI: Non-Expression")
p_ioi
# Group mean
ioi_all <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI))]
print(ioi_all)
# For each individual
ioi_seq <- df_ioi[EighthNote == "Yes", .(N = length(normIOI), Mean = mean(normIOI), SD = sd(normIOI)), .(SubNr, Interval)]
p_ioi_seq <- ggplot(data = ioi_seq, aes(x = Interval, y = Mean, colour = SubNr)) +
geom_line() +
geom_point() +
geom_hline(yintercept = 1, linetype = "dashed") + # Tempo
geom_errorbar(aes(ymin = Mean - SD, ymax = Mean + SD), width=.2,
position = position_dodge(.05)) +
labs(x = "Interval", y = "Normalised IOI") + scale_x_continuous(breaks=seq(1,66,1))
p_ioi_seq
excluded_ioi <- ioi[Mean < mean(ioi$Mean)+3*mean(ioi$SD) & Mean > mean(ioi$Mean)-3*mean(ioi$SD)]
print(excluded_ioi)
# export df_ioi
write.csv(df_ioi, file = "./data_ioi_offset.csv", row.names = F)
?fread
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
setwd("~/Google Drive/Project/adaptation-v1.0/material/preprocessor")
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
getwd()
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
df_kot
View(df_kot)
df_kot_art <- df_kot[Skill == "articulation"]
# only transition points for arituclation
df_kot_transition <- df_kot[Skill == "articulation" & Subcomponent != "Legato" & Subcomponent != "Staccato"]
View(df_kot_transition)
rm(df_kot_art)
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
# only transition points for arituclation
df_kot_trans <- df_kot[Skill == "articulation" & Subcomponent != "Legato" & Subcomponent != "Staccato"]
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Skill)]
View(art_trans)
View(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(KOT), SEM = sd(KOT)/sqrt(length(Mean))), by = .(Condition, Skill)]
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(KOT)/sqrt(length(Mean))), by = .(Condition, Skill)]
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Skill)]
View(art_trans)
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Skill)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Skill)]
print(art_trans_all)
factor(art_trans)
art_trans
# Stats (ez)
# Reduce unused factors
art_trans_norm <- by(art_trans$Mean, list(art_trans$Condition), shapiro.test)
print(art_trans_norm)
art_trans_aov <- ezANOVA(
data = art_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition)
, type = 3
, detailed = TRUE
)
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("ggsignif")) {install.packages("ggsignif"); require("ggsignif")}
# statistics
if (!require("stats")) {install.packages("stats"); require("stats")}
if (!require("effsize")) {install.packages("effsize"); require("effsize")}
if (!require("ez")) {install.packages("ez"); require("ez")}
art_trans_aov <- ezANOVA(
data = art_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition)
, type = 3
, detailed = TRUE
)
art_trans_aov <- ezANOVA(
data = art_trans
, dv = .(Mean)
, wid = .(SubNr)
, within = .(Condition)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
p_art_trans <- ggplot(data = art_trans, aes(x = Condition, y = Mean) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
p_art_trans <- ggplot(data = art_trans, aes(x = Condition, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans <- ggplot(data = art_trans, aes(x = Condition, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) #+
#labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans <- ggplot(data = art_trans_all, aes(x = Condition, y = Mean)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(Mean)
, wid = .(SubNr)
, within = .(Condition)
, type = 3
, detailed = TRUE
)
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Skill, Subcomponent)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Skill, Subcomponent)]
print(art_trans_all)
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Subcomponent)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Subcomponent)]
print(art_trans_all)
# Stats (ez)
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Conditionm art_trans$Subcomponent), shapiro.test)
# Stats (ez)
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Conditionm art_trans$Subcomponent), shapiro.test)
# Stats (ez)
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Condition, art_trans$Subcomponent), shapiro.test)
print(art_trans_norm)
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition, Subcomponent)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
p_art_trans <- ggplot(data = art_trans_all, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans_box <- ggplot(data = art_trans, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_boxplot() +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 1, position = position_dodge(0.75)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans_box
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("ggsignif")) {install.packages("ggsignif"); require("ggsignif")}
# statistics
if (!require("stats")) {install.packages("stats"); require("stats")}
if (!require("effsize")) {install.packages("effsize"); require("effsize")}
if (!require("ez")) {install.packages("ez"); require("ez")}
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
# only transition points for arituclation
df_kot_trans <- df_kot[Skill == "articulation" & Subcomponent != "Legato" & Subcomponent != "Staccato"]
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Subcomponent)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Subcomponent)]
print(art_trans_all)
# Stats (ez)
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Condition, art_trans$Subcomponent), shapiro.test)
print(art_trans_norm)
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition, Subcomponent)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
p_art_trans <- ggplot(data = art_trans_all, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans_box <- ggplot(data = art_trans, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_boxplot() +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 1, position = position_dodge(0.75)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans_box
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("ggsignif")) {install.packages("ggsignif"); require("ggsignif")}
# statistics
if (!require("stats")) {install.packages("stats"); require("stats")}
if (!require("effsize")) {install.packages("effsize"); require("effsize")}
if (!require("ez")) {install.packages("ez"); require("ez")}
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
# only transition points for arituclation
df_kot_trans <- df_kot[Skill == "articulation" & Subcomponent != "Legato" & Subcomponent != "Staccato"]
# For each individual)
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Subcomponent)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Subcomponent)]
print(art_trans_all)
# Stats
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Condition, art_trans$Subcomponent), shapiro.test)
print(art_trans_norm)
# ezAnova
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition, Subcomponent)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
p_art_trans <- ggplot(data = art_trans_all, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans_box <- ggplot(data = art_trans, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_boxplot() +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 1, position = position_dodge(0.75)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans_box
rm(list=ls(all=T))
# packages
# data manipulation
if (!require("data.table")) {install.packages("data.table"); require("data.table")}
# plot
if (!require("ggplot2")) {install.packages("ggplot2"); require("ggplot2")}
if (!require("ggsignif")) {install.packages("ggsignif"); require("ggsignif")}
# statistics
if (!require("stats")) {install.packages("stats"); require("stats")}
if (!require("effsize")) {install.packages("effsize"); require("effsize")}
if (!require("ez")) {install.packages("ez"); require("ez")}
# read csv
df_kot <- fread("./../trimmed/data_kot.csv")
# only transition points for arituclation
df_kot_trans <- df_kot[Skill == "articulation" & Subcomponent != "Legato" & Subcomponent != "Staccato"]
# For each individual
art_trans <- df_kot_trans[, .(N = length(KOT), Mean = mean(KOT), SD = sd(KOT)), by = .(SubNr, Condition, Subcomponent)]
print(art_trans)
# Group
art_trans_all <- art_trans[, .(N = length(Mean), Mean = mean(Mean), SEM = sd(Mean)/sqrt(length(Mean))), by = .(Condition, Subcomponent)]
print(art_trans_all)
# Stats
# normality check
art_trans_norm <- by(art_trans$Mean, list(art_trans$Condition, art_trans$Subcomponent), shapiro.test)
print(art_trans_norm)
# ezAnova
art_trans_aov <- ezANOVA(
data = df_kot_trans
, dv = .(KOT)
, wid = .(SubNr)
, within = .(Condition, Subcomponent)
, type = 3
, detailed = TRUE
)
print(art_trans_aov)
p_art_trans <- ggplot(data = art_trans_all, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Mean - SEM, ymax = Mean + SEM),
width = .2, position = position_dodge(.9)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans
p_art_trans_box <- ggplot(data = art_trans, aes(x = Subcomponent, y = Mean, fill = Condition)) +
geom_boxplot() +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 1, position = position_dodge(0.75)) +
labs(y = "KOT (ms)", subtitle = "KOT: Articulation Transition")
p_art_trans_box
